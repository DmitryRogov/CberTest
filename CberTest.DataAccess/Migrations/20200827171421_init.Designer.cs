// <auto-generated />
using System;
using CberTest.DataAccess.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CberTest.DataAccess.Migrations
{
    [DbContext(typeof(PhotosContext))]
    [Migration("20200827171421_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("CberTest.Core.Models.MediaFile", b =>
                {
                    b.Property<string>("PhotoId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PhotoId");

                    b.HasIndex("FileType");

                    b.ToTable("MediaFile");
                });

            modelBuilder.Entity("CberTest.Core.Models.Photo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("CberTest.Core.Models.MediaFile", b =>
                {
                    b.HasOne("CberTest.Core.Models.Photo", "Photo")
                        .WithOne("File")
                        .HasForeignKey("CberTest.Core.Models.MediaFile", "PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
